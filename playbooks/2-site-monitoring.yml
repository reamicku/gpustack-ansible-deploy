---
- name: Install node-exporter
  hosts: all
  become: true
  gather_facts: false
  tasks:
    - name: Deploy node-exporter container
      docker_container:
        name: node-exporter
        image: quay.io/prometheus/node-exporter:latest
        restart: no
        restart_policy: always
        detach: yes
        network_mode: host
        pid_mode: host
        volumes:
          - "/:/host:ro,rslave"
        command: --path.rootfs=/host

- name: Create an internal network for monitoring
  hosts: controller
  become: true
  tasks:
    - name: Create 'net_monitoring' network
      docker_network:
        name: net_monitoring

- name: Install prometheus
  hosts: controller
  become: true
  gather_facts: false
  tasks:
    - name: Generate target hosts list
      set_fact:
        target_hosts: "{% for host in groups['all'] %}\"{{ hostvars[host]['ansible_host'] }}:9100\"{% if not loop.last %}, {% endif %}{% endfor %}"
    
    - name: Create data directory
      ansible.builtin.file:
        path: ~/data
        state: directory
        mode: '0755'
      become: false

    - name: Create Prometheus data directory
      ansible.builtin.file:
        path: ~/data/prometheus
        state: directory
        mode: '0755'
      become: false

    - name: Update config.yml with target hosts
      template:
        src: ./templates/prometheus.yml.j2
        dest: /home/user/data/prometheus/prometheus.yml
        mode: '0644'
      become: false
      notify: Restart prometheus

    - name: Create Prometheus persistence volume
      docker_volume:
        name: prometheus_persistence_data
        driver: local

    - name: Deploy Prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus:latest
        restart: no
        restart_policy: unless-stopped
        detach: yes
        networks:
         - name: "net_monitoring"
        volumes:
          - "prometheus_persistence_data:/prometheus"
          - "/home/user/data/prometheus:/etc/prometheus"

  handlers:
    - name: Restart prometheus
      become: true
      docker_container:
        name: prometheus
        restart: yes

- name: Install Grafana
  hosts: controller
  become: true
  gather_facts: false
  tasks:
    - name: Create Grafana persistence volume
      docker_volume:
        name: grafana_persistence_data
        driver: local

    - name: Deploy Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana-enterprise:latest
        restart: no
        restart_policy: unless-stopped
        detach: yes
        networks:
          - name: "net_monitoring"
        ports:
          - "0.0.0.0:{{ grafana_server_port }}:3000"
        volumes:
          - grafana_persistence_data:/var/lib/grafana
        env:
          GF_SECURITY_ADMIN_USER: "{{ grafana_initial_admin_user }}"
          GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_initial_admin_password }}"
          GF_SECURITY_ADMIN_EMAIL: "{{ grafana_initial_admin_email }}"
      register: grafana_ct_result

    - name: Pause for Grafana to propagate
      shell:
        cmd: sleep 10; return 0
      register: result
      changed_when: result.rc == 1
      when: grafana_ct_result is changed

    # Will always report 'changed' due to a bug.
    # https://github.com/ansible-collections/community.grafana/issues/127
    - name: Create Prometheus datasource in Grafana
      community.grafana.grafana_datasource:
        grafana_url: "http://{{ hostvars['controller-1']['ansible_host'] }}:{{ grafana_server_port }}"
        grafana_user: "{{ grafana_initial_admin_user }}"
        grafana_password: "{{ grafana_initial_admin_password }}"
        name: "prometheus"
        ds_type: prometheus
        ds_url: http://prometheus:9090
        access: proxy
        is_default: true

    - name: Import Grafana dashboard for node-exporter
      community.grafana.grafana_dashboard:
        grafana_url: "http://{{ hostvars['controller-1']['ansible_host'] }}:{{ grafana_server_port }}"
        grafana_user: "{{ grafana_initial_admin_user }}"
        grafana_password: "{{ grafana_initial_admin_password }}"
        dashboard_id: 1860
        dashboard_revision: 37
        state: present
        commit_message: Updated by ansible

- name: Output variables
  hosts: controller
  gather_facts: false
  tasks:
    - name: Get control panel URL & credentials
      ansible.builtin.debug:
        msg:
          - Run the `playbooks/99-show-urls.yml` playbook to get URLs.
